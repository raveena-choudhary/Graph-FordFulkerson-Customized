# COMP_6651_PROJ_40232370
Author: Raveena Choudhary, 40232370

This project focuses on implementing and assessing four augmenting path algorithms designed for the Ford-Fulkerson algorithm, aiming to determine the maximum flow within a graph.
The goal is to scrutinize the efficiency and computational performance of these algorithms on randomly created source-sink graphs.
The study seeks to offer insights into the merits and drawbacks of each algorithm, contributing to a deeper understanding of their roles in the optimization of network flow.

## Getting Started
### Prerequisites

1) Supported Java Version JDK 1.8
2) Run java -version to check java version in computation.encs.concordia.ca server.

###IO Files
InputFile.csv in InputFiles folder
All graph files are placed in GraphFiles Folder
All output files are placed in OutputFiles Folder

### execution

1) Unzip folder COMP_6651_PROJ_40232370_zip.zip submitted on Moodle 
2) Copy project COMP_6651_PROJ_40232370 from folder COMP_6651_PROJ_40232370_zip (extracted in step 1) in computation.encs.concordia.ca server.

3) From current directory (note: you must run step3 from the same directory level where COMP_6651_PROJ_40232370 is placed)
4) Run following cmd:
   java -cp ./COMP_6651_PROJ_40232370/out/production/COMP_6651_PROJ_40232370 Algorithms.FordFulkerson
5) User should see the below menu:

   COMP 6651 Project --> Ford Fulkerson

   1. Generate Graph with Input File (Only InputFile.csv supported)
   2. Run Ford Fulkerson
   3. Enter values manually to generate graph
   4. Run Ford Fulkerson with Test Graph without cycle in Tests
   5. Exit

   Enter your choice:

6) Select any option from available Options 1 to 5 as per the use case.
7) Generate Graph with Input File (Only InputFile.csv supported) : Generates random source sink graphs(.csv files) based on InputFile i.e., InputFile.csv(.\COMP_6651_PROJ_40232370\src\InputFiles\InputFile.csv)
and store these files in GraphFiles folder(.\COMP_6651_PROJ_40232370\src\GraphFiles\) for each graph generated. Refresh folder in case files not visible.
8) Run Ford Fulkerson : Read all the graphs in GraphFiles folder and provide the output i.e. running Longest Acyclic Path, Shortest Augmenting Path, DFSLike, Maximum Capacity, RandomAlgo algorithms.
Further, stores 4 algorithms results in OutputFiles folder(.\COMP_6651_PROJ_40232370\src\GraphFiles\) with results.csv appended to each graph filename provided as input. Refresh folder in case files not visible.
9) Enter values manually to generate graph: Run program with different set of values(n,r,upperCap), and Option 2 to run Ford fulkerson.
10) Run Ford Fulkerson with Test Graph without cycle in Tests : Runs TestGraphWithoutCycle.java, test graph present under Tests Folder.
11) Exit: Exits the program.
12) You have successfully completed the execution!
13) All the utlities used within this program are present under util folder.
14) All Algorithms are maintained in src/Algorithms folder.

###Notes:
1) Please note program is written to support only one InputFile.csv file for now. If you want to run with new graph values, please add the inputs in InputFile.csv file with "," separated. It should be in the format n, r, upperCap
Example:
"n,r,upperCap"
"100,0.2,2"
"200,0.2,2"
2) If you are running algorithm twice in the same session of program execution, you might see output twice appended in the same file. Please see the last one which is the latest.
3) For now, program only supports graphs generated by providing input in Input File , you cannot provide any graph file to the program --> can be improved in future
4) There is separate option which provides the user with the ability to provide n, r, upperCap manually and generate graph.
5) To run ford fulkerson, please choose option 2 from the menu
6) Ford fulkerson will generate outputFiles for graph, maintaining the numbering as given in input file.
7) Folders will be automatically refreshed, i.e., files would be deleted with every execution.
8) Program execution on server is also working for me, by following the steps mentioned above.

###If encountered the below error while executing on ssh server, follow below steps
1) Go to file "FileConstants.java" in util folder and i have placed three directory paths for linux and windows, commented on top of the commands. Uncomment the appropriate and use, build the project.
2) If unable to view graph and output files , then refresh the folder or reload from disk.